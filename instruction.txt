yarn init or npm init
yarn add typescript --dev
yarn add mongoose express dotenv cors
tsc --init
then in your tsconfig.json file change the rootdir and outdir directory as you want
for example :   "rootDir": "./src",
                 "outDir": "./dist", 

now create a branch  for this project as you wish . 
               git checkout -b UM-2
               git add . 
               git commit -m "project setup"
               git push origin UM-2
create src folder 
         - app.ts -> ekhane express k import kora and express k call diya r export korte hbe jate server.ts e moodhe import kora jay .
           - then cors and parse 
         - server.ts -> ekhane ekta function er moddhe mongoose connect kora and app.listen method ke call diya
create .env file 
         - first check dotenv package install or not
         - ekhane port and mongooes uri
============================================================
ESlint , Prettier , husky , lintStage ki?
ESlint   
        - jodi code er moddhe kono error hoy seta check kore diya 
Prettier 
        - Prettier hocche code format kore diya
        - jodi kono friend jodi code e vul kore thahole code format kore dibe
Husky 
        - code er moddhe jodi vul thake and git add , commit korar por vul janay dibe , push korar age bole dibe , kothai check korbe
lint Stage -
            - eta stage er gula check korbe , husky pora code check korbe r lint Stage sudhu jegula stage a ache , or je gula git add kora hoyeche
================================================================
how to install ESlint ?
go to search - typescript ESlint and Prettier setup or go to url https://blog.logrocket.com  
first install - 
        - yarn add eslint @typescript-eslint/parser @typescript-eslint/eslint-plugin --save-dev
        - go to documetation ---follow exatly same--- https://blog.logrocket.com/linting-typescript-eslint-prettier/
        - in package.json -> in script -> 
                                           "lint:check": "eslint --ignore-path .eslintignore --ext .js,.ts .",
                                           "lint-fix": "eslint --fix",
                                            "prettier:check": "prettier --ignore-path .gitignore --write \"**/*.+(js|ts|json)\"",
And also i have installed two extention 
                                      -> eslint adn Prettier
===============================================================
husky - 
       - eslint -> amader code e kono warning or error thakle dekabe
       - prettier -> eita amader code format kore dibe 
       - husky -> eslint and prettier na kore == amra code github e push kori == 
                thahole husky code push korar age first e eslint and prettier check kore === 
                jodi error hoy github e code commit and push korbe na 
                
       - install husky
              -> go to -> https://typicode.github.io/husky/getting-started.html
              -> 1 . yarn husky install
              -> 2. yarn add husky --dev
                 eta hook create kora
              -> 3. yarn husky add .husky/pre-commit "yarn test"
              -> 4. ekhon .husky name e ekta folder create hbe and pre-commit name e ekta 
                    "yarn lint:check" eita likhte hbe
              -> 5. ekhon jodi git add . and gii commit -m "testing" kori . tahole jodi code er moddhe kono error thake
                       tahole commit korbe na. 
===============================================================
lint stage -
       - jegula stage e ache se gula check kore , for example : git add and git commit korle stage chole jay 
       - install lint
              -> 1. go to -> https://github.com/okonet/lint-staged#readme
              -> 2. yarn add -D lint-staged
              -> 3. then add -> "lint-staged" : {
                                  "src/**/*.ts" : "yarn lint-prettier"
                              },    
                              eita add korte hbe package.json -> license er niche diche
              -> 4. then pre-commit er vitor -> 
                                yarn lint-staged likhte hbe 
              -> 5. ekhon git commit er age code format and error check korbe    
===================================================================
Create model and schema using modular pattern
create nested folder app => modules => users
              ->Now in users folder create a file 
                     user.interface.ts => in file create a interface or type  and export it 
                           -> go to - https://mongoosejs.com/docs/typescript.html
                     user.model.ts => to create a model 
                           -> 1. import schema and model from mongooes
                           -> 2. now in schema timestamp : true dile createdAt , updatedAt create hbe             
=================================================================
generate password and utils function
default password korte user k => 
           .env file ekta default user password dite hbe 
           tar por ekta service korte hbe and createUser function er moddhe likhte jodi !user.password na thake 
           .env theke niye set kore dite hbe
auto key generate -> 
             - create user.util.ts file and oi file generateUserid name e ekta function kora and export kora 
             - const currentId = (await findLastUserId()) || (0).toString().padStart(5, '0')
               const incrementedId = (parseInt(currentId) + 1).toString().padStart(5, '0')
               -ekhane user id default 00001 theke suru hbe and next e 1 plus hoye 00002 hbe .
==============================================================
Eslint e rules improve korar
             - .eslintrc er moddhe role diya jay .
                "rules": {
                   "no-unused-vars": "error",
                   "no-console" : "error",
                   "no-undefined" : "error",
                   "no-unused-expressions" : "error",
                   "no-unreachable" : "error",
                   "consistent-type-definitions": ["error", "type"]
                 },
if you want to override the vscode setting in particular setting
 create .vscode folder and in folder create file setting.json .
         - eta create korle vs code default setting override kore .
======================================================
what is enviroment ? why we use?
        Node Environmetn first e development e thake . then production e live hoy jay 
        -> by default node development e thake
        -> console.log(app.get('env')) //ekhane development print kore 
        -> .env hocche cors and configuration rakhte node lage .
        
======================================================
what is logger ? why we need this ?
       -> 
           
